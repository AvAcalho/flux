"use strict";(globalThis["webpackChunkflux"]=globalThis["webpackChunkflux"]||[]).push([[2740],{20622:(e,t,a)=>{a.r(t),a.d(t,{default:()=>g});var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[e.callResponse.data?a("b-card",[a("app-collapse",{attrs:{accordion:""},model:{value:e.activeHelpNames,callback:function(t){e.activeHelpNames=t},expression:"activeHelpNames"}},e._l(e.helpResponse,(function(t){return a("div",{key:t},[t.startsWith("=")?a("div",[a("br"),a("h2",[e._v(" "+e._s(t.split(" ")[1])+" ")])]):e._e(),t.startsWith("=")?e._e():a("app-collapse-item",{attrs:{title:t},on:{visible:function(a){return e.updateActiveHelpNames(a,t)}}},[a("p",{staticClass:"helpSpecific"},[e._v(" "+e._s(e.currentHelpResponse||"Loading help message...")+" ")]),a("hr")])],1)})),0)],1):e._e()],1)},s=[],r=a(23215),o=a(3899),l=a(5825),i=a(4922),d=a(27616);const c={components:{BCard:r._,AppCollapse:l.Z,AppCollapseItem:i.Z,ToastificationContent:o.Z},data(){return{callResponse:{status:"",data:""},activeHelpNames:"",currentHelpResponse:""}},computed:{helpResponse(){return this.callResponse.data?this.callResponse.data.split("\n").filter((e=>""!==e)).map((e=>e.startsWith("=")?e:e.split(" ")[0])):[]}},mounted(){this.daemonHelp()},methods:{async daemonHelp(){const e=await d.Z.help();"error"===e.data.status?this.$toast({component:o.Z,props:{title:e.data.data.message||e.data.data,icon:"InfoIcon",variant:"danger"}}):(this.callResponse.status=e.data.status,this.callResponse.data=e.data.data)},updateActiveHelpNames(e,t){this.activeHelpNames=t,this.daemonHelpSpecific()},async daemonHelpSpecific(){this.currentHelpResponse="",console.log(this.activeHelpNames);const e=await d.Z.helpSpecific(this.activeHelpNames);if(console.log(e),"error"===e.data.status)this.$toast({component:o.Z,props:{title:e.data.data.message||e.data.data,icon:"InfoIcon",variant:"danger"}});else{const t=e.data.data.split("\n"),a=t.length;let n=0;for(let e=0;e<a;e+=1){let a="";if("{"===t[e].trim()||"["===t[e].trim()){n+=4;for(let e=0;e<n;e+=1)a+=" ";t[e]=a+t[e],n+=4}else if("}"===t[e].trim()||"]"===t[e].trim()){n-=4;for(let e=0;e<n;e+=1)a+=" ";t[e]=a+t[e],n-=4}else{for(let e=0;e<n;e+=1)a+=" ";t[e]=a+t[e]}}this.currentHelpResponse=t.join("\n"),console.log(this.currentHelpResponse)}}}},u=c;var p=a(1001),m=(0,p.Z)(u,n,s,!1,null,null,null);const g=m.exports},27616:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(80914);const s={help(){return(0,n.Z)().get("/daemon/help")},helpSpecific(e){return(0,n.Z)().get(`/daemon/help/${e}`)},getInfo(){return(0,n.Z)().get("/daemon/getinfo")},getFluxNodeStatus(){return(0,n.Z)().get("/daemon/getzelnodestatus")},getRawTransaction(e,t){return(0,n.Z)().get(`/daemon/getrawtransaction/${e}/${t}`)},listFluxNodes(){return(0,n.Z)().get("/daemon/listzelnodes")},viewDeterministicFluxNodeList(){return(0,n.Z)().get("/daemon/viewdeterministiczelnodelist")},getFluxNodeCount(){return(0,n.Z)().get("/daemon/getzelnodecount")},getStartList(){return(0,n.Z)().get("/daemon/getstartlist")},getDOSList(){return(0,n.Z)().get("/daemon/getdoslist")},fluxCurrentWinner(){return(0,n.Z)().get("/daemon/fluxcurrentwinner")},getBenchmarks(){return(0,n.Z)().get("/daemon/getbenchmarks")},getBenchStatus(){return(0,n.Z)().get("/daemon/getbenchstatus")},startBenchmark(e){return(0,n.Z)().get("/daemon/startbenchmark",{headers:{zelidauth:e}})},stopBenchmark(e){return(0,n.Z)().get("/daemon/stopbenchmark",{headers:{zelidauth:e}})},getBlockchainInfo(){return(0,n.Z)().get("/daemon/getblockchaininfo")},getMiningInfo(){return(0,n.Z)().get("/daemon/getmininginfo")},getNetworkInfo(){return(0,n.Z)().get("/daemon/getnetworkinfo")},validateAddress(e,t){return(0,n.Z)().get(`/daemon/validateaddress/${t}`,{headers:{zelidauth:e}})},getWalletInfo(e){return(0,n.Z)().get("/daemon/getwalletinfo",{headers:{zelidauth:e}})},listFluxNodeConf(e){return(0,n.Z)().get("/daemon/listzelnodeconf",{headers:{zelidauth:e}})},start(e){return(0,n.Z)().get("/daemon/start",{headers:{zelidauth:e}})},restart(e){return(0,n.Z)().get("/daemon/restart",{headers:{zelidauth:e}})},stopDaemon(e){return(0,n.Z)().get("/daemon/stop",{headers:{zelidauth:e}})},rescanDaemon(e,t){return(0,n.Z)().get(`/daemon/rescanblockchain/${t}`,{headers:{zelidauth:e}})},getBlock(e,t){return(0,n.Z)().get(`/daemon/getblock/${e}/${t}`)},tailDaemonDebug(e){return(0,n.Z)().get("/flux/taildaemondebug",{headers:{zelidauth:e}})},justAPI(){return(0,n.Z)()},cancelToken(){return n.S}}}}]);